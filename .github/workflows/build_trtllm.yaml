name: Build TensorRT-LLM

on:
  push:
    branches:
      - 'main'
      - 'trtllm/ci'
    tags:
      - 'v*'
  pull_request:
    paths:
      - "backends/trtllm"
      - "server/**"
      - "proto/**"
      - "router/**"
      - "launcher/**"
      - "Cargo.lock"
      - "rust-toolchain.toml"
    branches:
      - "main"

permissions:
  contents: read # Required to check out repository.
  id-token: write # Required to authenticate via OIDC.

jobs:
  build:
    runs-on:
      group: aws-highmemory-32-plus-priv
    steps:
      - uses: actions/checkout@v4

      - name: Extract TensorRT-LLM version
        run: |
          echo "TENSORRT_LLM_VERSION=$(grep -oP '([a-z,0-9]{40})' backends/trtllm/cmake/trtllm.cmake)" >> $GITHUB_ENV
          echo "TensorRT-LLM version: ${{ env.TENSORRT_LLM_VERSION }}"

      - name: "Configure AWS Credentials"
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-1
          role-to-assume: ${{ secrets.AWS_ROLE_GITHUB_TGI_TEST }}
          role-duration-seconds: 7200
          output-credentials: true

      - name: Initialize Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true
          buildkitd-config: /tmp/buildkitd.toml

      - name: Build and push Docker image
        id: build-and-push
        env:
          LABEL: "trtllm"
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile_trtllm
          target: ci-runtime
          push: false
          load: true
          platforms: 'linux/amd64'
          build-args: |
            build_type=dev
            is_gha_build=true
            aws_access_key_id=${{ steps.aws-creds.outputs.aws-access-key-id }}
            aws_secret_access_key=${{ steps.aws-creds.outputs.aws-secret-access-key }}
            aws_session_token=${{ steps.aws-creds.outputs.aws-session-token }}
            sccache_bucket=${{ secrets.AWS_S3_BUCKET_GITHUB_TGI_TEST }}
            sccache_s3_key_prefix=trtllm-${{ env.TENSORRT_LLM_VERSION }}
            sccache_region=us-east-1
          cache-from: type=s3,region=us-east-1,bucket=ci-docker-buildx-cache,name=text-generation-inference-cache-${{ env.LABEL }}-trtllm,mode=min,access_key_id=${{ secrets.S3_CI_DOCKER_BUILDX_CACHE_ACCESS_KEY_ID }},secret_access_key=${{ secrets.S3_CI_DOCKER_BUILDX_CACHE_SECRET_ACCESS_KEY }},mode=min
          cache-to: type=s3,region=us-east-1,bucket=ci-docker-buildx-cache,name=text-generation-inference-cache-${{ env.LABEL }}-trtllm,mode=min,access_key_id=${{ secrets.S3_CI_DOCKER_BUILDX_CACHE_ACCESS_KEY_ID }},secret_access_key=${{ secrets.S3_CI_DOCKER_BUILDX_CACHE_SECRET_ACCESS_KEY }},mode=min







